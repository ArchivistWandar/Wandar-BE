// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  bio       String?
  avatar    String?
  email     String   @unique
  password  String
  photo     Photo[]
  lands     Land[]
  posts     Post[]
  followers User[]   @relation("FollowRelation")
  following User[]   @relation("FollowRelation")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Record    Record[]
}

model Land {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  posts     Post[]
  photos    Photo[]
  landname  String
  location  String?
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  photos      Photo[]
  title       String    @default("No title")
  caption     String
  hashtags    Hashtag[]
  isPublic    Boolean   @default(true)
  isPublished Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int
  land        Land      @relation(fields: [landId], references: [id])
  landId      Int
}

model Photo {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  photo     String
  location  String?
  isPublic  Boolean  @default(true)
  user      User     @relation(fields: [userId], references: [id])
  land      Land     @relation(fields: [landId], references: [id])
  records   Record[]
  userId    Int
  landId    Int
  postId    Int
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  hashtag   String   @unique
}

model Record {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  title     String
  photos    Photo[]
  theme     String
  userId    Int
}
